##
# Runs sanity tests on the core and the sample kernels.
##

steps:
- pwsh: |
    echo $CONDA
    echo $_CONDA_EXE
    $(CONDA)/scripts/conda.exe create --yes --quiet --name core_tests
  displayName: Create Anaconda environment

- script: |
    $(CONDA)/scripts/conda.exe install --yes --quiet --name core_tests python=3.7 notebook jupyter_client pytest nose pip>=18.1
  displayName: Install Anaconda packages

- pwsh: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate conda_env
    conda info
    pwsh ./pack-conda.ps1
  displayName: "Packing IQ# packages"
  workingDirectory: '$(System.DefaultWorkingDirectory)/build'
  condition: eq(variables.OperatingSystem, 'windows')

- script: |
     echo $PATH
     which python
  condition: in(variables['Agent.OS'], 'Linux', 'Darwin')
  displayName: 'Check Python path (Linux and macOS).'

- script: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate core_tests
    conda info
    pip install jupyter_kernel_test
  displayName: 'Install additional dependencies from pip'

# The version of pyzmq on Anaconda does not seem to work in Windows agents
# as of November 2018: https://github.com/zeromq/pyzmq/issues/852
- script: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate core_tests
    pip uninstall -y pyzmq
    pip install pyzmq
  displayName: 'Fix pyzmq on Windows'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))

- script: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate core_tests
    dotnet run -c $(Build.Configuration) -v n -- install --develop
  displayName: "Add IEcho kernel to Jupyter."
  workingDirectory: examples/echo-kernel

- script: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate core_tests
    dotnet run -c $(Build.Configuration) -v n -- install --develop
  displayName: "Add IMoon kernel to Jupyter."
  workingDirectory: examples/moon-kernel

- script: |
    (& "C:\Miniconda\scripts\conda.exe" "shell.powershell" "hook") | Out-String | Invoke-Expression
    conda activate core_tests
    py.test tests/protocol/
  displayName: "Run Jupyter protocol tests."
  workingDirectory: .

